# Developers - uncomment or specify any supported RMap properties in this file
# - 'mvn validate cargo:run' will use any values you set here

# OAuth configuration parameters
#
rmapweb.google-oauth-enabled=true
rmapweb.google-key=${oauth_google_key}
rmapweb.google-secret=${oauth_google_secret}
rmapweb.google-callback=${oauth_google_callback}

#
rmapweb.orcid-oauth-enabled=true
rmapweb.orcid-key=${oauth_orcid_key}
rmapweb.orcid-secret=${oauth_orcid_secret}
rmapweb.orcid-callback=${oauth_orchid_callback}
#
rmapweb.twitter-oauth-enabled=true
rmapweb.twitter-key=${oauth_twitter_key}
rmapweb.twitter-secret=${oauth_twitter_secret}
rmapweb.twitter-callback=${oauth_twitter_callback}

# RMap API parameters
#
rmapapi.path=https\://${rmap_api_path}

# Database configuration parameters
#
authdb.driverClassName=org.mariadb.jdbc.Driver
authdb.url=jdbc:mariadb://${database_connect}/${database}?autoReconnect=true
authdb.username=${database_username}
authdb.password=${database_password}
authdb.validationQuery=SELECT 1
authdb.testOnBorrow=true
authdb.hibernate.dialect=org.hibernate.dialect.MySQLDialect
authdb.hibernate.show_sql=true

# HTTP triple store configuration parameters
rdf4jhttp.repository.url=http\://${graphdb_address}
rdf4jhttp.repository.name=${graphdb_repository}
rdf4jhttp.repository.user=${graphdb_username}
rdf4jhttp.repository.password=${graphdb_password}

#need these set to create and use administrator user in web gui
rmapauth.baseUrl=https\://rmap-hub.org
rmapcore.adminAgentUri=https\://rmap-hub.org#Administrator
#If enabled, the admin tool allows an admin user to configure users, keys, and delete specific discos.  
#You can access tool using e.g. rmap-hub.org/admin/login
rmapweb.admin-tool-enabled=true
rmapweb.admin-username=rmapadmin
rmapweb.admin-password=eke3qL6z.fFHA9

# ARKID service properties for ezid
idservice.idMinterUrl=https\://ezid.cdlib.org
idservice.idPrefix=ark:/87281/t2
idservice.userName=jhudms
idservice.userPassword=rRVuYKTerAeBgY
# the folder used to store cached ids and cache size.
idservice.idStoreFile=${java.io.tmpdir}/idStoreFile
idservice.maxStoreSize=200

# Base URL of the solr server, e.g. http://localhost:8983/solr
rmap.solr.url=http://solr.prod.rmap-hub.org:8983/solr

# Comma-separated list of Kafka nodes in the cluster in the form <server>:<port>
# <server> may be a DNS name or IP address
# At least one Kafka node must be listed, the others will be discovered automatically
# e.g.: 192.168.99.100:29092
# e.g.: 192.168.99.100:29092,192.168.99.101:29092
bootstrap.servers=10.0.3.100:9092,10.0.4.100:9092,10.0.5.100:9092
